{"ast":null,"code":"var _jsxFileName = \"/Users/mrtonero/Desktop/React-todo-app/client/todo-list-todoapp/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [itemText, setItemText] = useState('');\n  const [listItems, setListItems] = useState([]);\n  const [isUpdating, setIsUpdating] = useState('');\n\n  //Add new todo item to the Database\n  const addItem = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:5500/api/item', {\n        item: itemText\n      });\n      setListItems(prev => [...prev, res.data]);\n      setItemText('');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //Create a function to fetch all todo items from database --  we will use useEffect Hook\n  useEffect(() => {\n    const getItemsList = async () => {\n      try {\n        const res = await axios.get('http://localhost:5500/api/items');\n        setListItems(res.data);\n        console.log('render');\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getItemsList();\n  }, []);\n\n  //Delete item When we click on Delete\n  const deleteItem = async id => {\n    try {\n      const res = await axios.delete(`http://localhost:5500/api/item/${id}`);\n      const newListItems = listItems.filter(item => item._id !== id);\n      setListItems(newListItems);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Update Item\n\n  //before updating item we need to show input field where we will create our updated item\n  const renderUpdateForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"update-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"update-new-input\",\n      type: \"text\",\n      placeholder: \"New Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"update-new-btn\",\n      type: \"submit\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: e => addItem(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add todo Item\",\n        onChange: e => {\n          setItemText(e.target.value);\n        },\n        value: itemText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-listItems\",\n      children: listItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-item\",\n        children: [isUpdating === item._id ? renderUpdateForm() : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"item-content\",\n          children: item.item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"update-item\",\n          onClick: () => {\n            setIsUpdating(item._id);\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-item\",\n          onClick: () => {\n            deleteItem(item._id);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8EbI/QneM6UoqvwmH0i6tY/CNYU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","itemText","setItemText","listItems","setListItems","isUpdating","setIsUpdating","addItem","e","preventDefault","res","post","item","prev","data","err","console","log","getItemsList","get","deleteItem","id","delete","newListItems","filter","_id","renderUpdateForm","className","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","target","value","map","onClick","_c","$RefreshReg$"],"sources":["/Users/mrtonero/Desktop/React-todo-app/client/todo-list-todoapp/src/App.js"],"sourcesContent":["import {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport \"./App.css\";\n\nfunction App() {\n  const [itemText,setItemText ] = useState('')\n  const [listItems, setListItems] = useState([])\n  const [isUpdating, setIsUpdating] = useState('')\n\n\n  //Add new todo item to the Database\n  const addItem = async (e) => {\n    e.preventDefault();\n    try{\n      const res = await axios.post('http://localhost:5500/api/item', {item: itemText})\n      setListItems(prev =>[...prev, res.data])\n      setItemText('')\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n\n//Create a function to fetch all todo items from database --  we will use useEffect Hook\nuseEffect(()=>{\n  const getItemsList = async () => {\n    try{\n      const res = await axios.get('http://localhost:5500/api/items')\n      setListItems(res.data)\n      console.log('render')\n    }catch(err){\n      console.log(err)\n    }\n  }\n  getItemsList()\n},[]);\n\n//Delete item When we click on Delete\nconst deleteItem = async (id) => {\n  try{\n    const res = await axios.delete(`http://localhost:5500/api/item/${id}`)\n    const newListItems = listItems.filter(item => item._id !== id)\n    setListItems(newListItems)\n    \n  }catch(err){\n    console.log(err)\n  }\n}\n\n\n// Update Item\n\n//before updating item we need to show input field where we will create our updated item\nconst renderUpdateForm = () => (\n  <form className='update-form'>\n    <input className='update-new-input' type='text' placeholder='New Item' />\n    <button className='update-new-btn' type='submit'>Update</button>\n  </form>\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>Todo List</h1>\n      <form className=\"form\" onSubmit={e => addItem(e)}>\n        <input type=\"text\" placeholder=\"Add todo Item\" onChange={e => {setItemText(e.target.value)}} value={itemText} />\n        <button type=\"submit\">Add</button>\n      </form>\n      <div className=\"todo-listItems\">\n        {\n          listItems.map(item => (\n            <div className=\"todo-item\">\n              {\n                isUpdating === item._id\n                ? renderUpdateForm()\n                : <>\n                  </>\n              }\n              <p className=\"item-content\">{item.item}</p>\n              <button className=\"update-item\" onClick={()=>{setIsUpdating(item._id)}}>Update</button>\n              <button className=\"delete-item\" onClick={()=>{deleteItem(item._id)}}>Delete</button>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}